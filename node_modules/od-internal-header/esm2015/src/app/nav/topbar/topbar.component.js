/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Component, Output, EventEmitter, Input } from '@angular/core';
import { HeaderService } from '../../services/header.service';
export class TopbarComponent {
    /**
     * @param {?} headerService
     */
    constructor(headerService) {
        this.headerService = headerService;
        this.sidenavToggle = new EventEmitter();
        this.environmentTitle = "";
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.getEnvironmentUrl(window.location.hostname);
    }
    /**
     * @return {?}
     */
    onToggleSidenav() {
        this.sidenavToggle.emit();
    }
    /**
     * @param {?} url
     * @return {?}
     */
    getEnvironmentUrl(url) {
        if (url.match('localhost')) {
            this.environmentTitle = 'LOCAL';
        }
        else if (url.endsWith('d.corp.odfl.com')) {
            this.environmentTitle = 'DEV';
        }
        else if (url.endsWith('l.corp.odfl.com')) {
            this.environmentTitle = 'LOAD';
        }
        else if (url.endsWith('q.corp.odfl.com')) {
            this.environmentTitle = 'QA';
        }
        else {
            this.environmentTitle = 'PROD';
        }
    }
}
TopbarComponent.decorators = [
    { type: Component, args: [{
                selector: 'od-internal-header-topbar',
                template: `<mat-toolbar color="primary">
    <div class="header">
      <img src="./assets/images/logos/OD_Logo.png">
    </div>

    <div fxFlex fxLayout fxFlexOffset="1%" fxLayoutGap="1%" fxLayoutAlign="flex-start center center">
        <div *ngFor="let page of headerService.pageList" fxHide.lt-md>
            <a routerLink={{page.routerLink}}>
                {{page.title}}
            </a>
        </div>
    </div>

    <div fxLayoutAlign="flex-end" fxLayoutGap="20px">
      <button mat-icon-button matTooltip="Version: 1.0.0">
       {{environmentTitle | uppercase}}
      </button>
  
        <button mat-icon-button (click)="onToggleSidenav()">
          <i class="fa fa-bars fa-2x"></i>
        </button>
    </div>

  </mat-toolbar>`,
                styles: [`mat-toolbar{background-color:#000}a{text-decoration:none;color:#fff;cursor:pointer}a:active,a:hover{color:#d3d3d3}.navigation-items{list-style:none;padding:0;margin:0}button,mat-icon{color:#fff}`]
            },] },
];
/** @nocollapse */
TopbarComponent.ctorParameters = () => [
    { type: HeaderService }
];
TopbarComponent.propDecorators = {
    sidenavToggle: [{ type: Output, args: ["sidenavToggle",] }],
    environmentTitle: [{ type: Input, args: ['environmentTitle',] }]
};
function TopbarComponent_tsickle_Closure_declarations() {
    /** @type {?} */
    TopbarComponent.prototype.sidenavToggle;
    /** @type {?} */
    TopbarComponent.prototype.environmentTitle;
    /** @type {?} */
    TopbarComponent.prototype.headerService;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9wYmFyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL29kLWludGVybmFsLWhlYWRlci8iLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2L3RvcGJhci90b3BiYXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFFQSxPQUFPLEVBQUUsU0FBUyxFQUFVLE1BQU0sRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQy9FLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQThCOUQsTUFBTTs7OztJQUtKLFlBQW1CLGFBQTRCO1FBQTVCLGtCQUFhLEdBQWIsYUFBYSxDQUFlOzZCQUhOLElBQUksWUFBWSxFQUFRO2dDQUNWLEVBQUU7S0FFTDs7OztJQUVwRCxRQUFRO1FBQ04sSUFBSSxDQUFDLGlCQUFpQixDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUM7S0FDbEQ7Ozs7SUFFRCxlQUFlO1FBQ2IsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLEVBQUUsQ0FBQztLQUMzQjs7Ozs7SUFFRCxpQkFBaUIsQ0FBQyxHQUFXO1FBQzNCLEVBQUUsQ0FBQSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQSxDQUFDO1lBQ3pCLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxPQUFPLENBQUM7U0FDakM7UUFBQSxJQUFJLENBQUMsRUFBRSxDQUFBLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLENBQUEsQ0FBQztZQUN4QyxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsS0FBSyxDQUFDO1NBQy9CO1FBQUEsSUFBSSxDQUFDLEVBQUUsQ0FBQSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxDQUFBLENBQUM7WUFDeEMsSUFBSSxDQUFDLGdCQUFnQixHQUFHLE1BQU0sQ0FBQztTQUNoQztRQUFBLElBQUksQ0FBQyxFQUFFLENBQUEsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGlCQUFpQixDQUFDLENBQUMsQ0FBQSxDQUFDO1lBQ3hDLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUM7U0FDOUI7UUFBQSxJQUFJLENBQUEsQ0FBQztZQUNKLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxNQUFNLENBQUM7U0FDaEM7S0FDRjs7O1lBdkRGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsMkJBQTJCO2dCQUNyQyxRQUFRLEVBQUU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2lCQXVCSztnQkFDZixNQUFNLEVBQUUsQ0FBQyxvTUFBb00sQ0FBQzthQUMvTTs7OztZQTdCUSxhQUFhOzs7NEJBZ0NuQixNQUFNLFNBQUMsZUFBZTsrQkFDdEIsS0FBSyxTQUFDLGtCQUFrQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2UgfSBmcm9tICcuLy4uLy4uL21vZGVscy9wYWdlLm1vZGVsJztcbmltcG9ydCB7IEFwcGxpY2F0aW9uIH0gZnJvbSAnLi8uLi8uLi9tb2RlbHMvYXBwbGljYXRpb24ubW9kZWwnO1xuaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSGVhZGVyU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2hlYWRlci5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnb2QtaW50ZXJuYWwtaGVhZGVyLXRvcGJhcicsXG4gIHRlbXBsYXRlOiBgPG1hdC10b29sYmFyIGNvbG9yPVwicHJpbWFyeVwiPlxuICAgIDxkaXYgY2xhc3M9XCJoZWFkZXJcIj5cbiAgICAgIDxpbWcgc3JjPVwiLi9hc3NldHMvaW1hZ2VzL2xvZ29zL09EX0xvZ28ucG5nXCI+XG4gICAgPC9kaXY+XG5cbiAgICA8ZGl2IGZ4RmxleCBmeExheW91dCBmeEZsZXhPZmZzZXQ9XCIxJVwiIGZ4TGF5b3V0R2FwPVwiMSVcIiBmeExheW91dEFsaWduPVwiZmxleC1zdGFydCBjZW50ZXIgY2VudGVyXCI+XG4gICAgICAgIDxkaXYgKm5nRm9yPVwibGV0IHBhZ2Ugb2YgaGVhZGVyU2VydmljZS5wYWdlTGlzdFwiIGZ4SGlkZS5sdC1tZD5cbiAgICAgICAgICAgIDxhIHJvdXRlckxpbms9e3twYWdlLnJvdXRlckxpbmt9fT5cbiAgICAgICAgICAgICAgICB7e3BhZ2UudGl0bGV9fVxuICAgICAgICAgICAgPC9hPlxuICAgICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cblxuICAgIDxkaXYgZnhMYXlvdXRBbGlnbj1cImZsZXgtZW5kXCIgZnhMYXlvdXRHYXA9XCIyMHB4XCI+XG4gICAgICA8YnV0dG9uIG1hdC1pY29uLWJ1dHRvbiBtYXRUb29sdGlwPVwiVmVyc2lvbjogMS4wLjBcIj5cbiAgICAgICB7e2Vudmlyb25tZW50VGl0bGUgfCB1cHBlcmNhc2V9fVxuICAgICAgPC9idXR0b24+XG4gIFxuICAgICAgICA8YnV0dG9uIG1hdC1pY29uLWJ1dHRvbiAoY2xpY2spPVwib25Ub2dnbGVTaWRlbmF2KClcIj5cbiAgICAgICAgICA8aSBjbGFzcz1cImZhIGZhLWJhcnMgZmEtMnhcIj48L2k+XG4gICAgICAgIDwvYnV0dG9uPlxuICAgIDwvZGl2PlxuXG4gIDwvbWF0LXRvb2xiYXI+YCxcbiAgc3R5bGVzOiBbYG1hdC10b29sYmFye2JhY2tncm91bmQtY29sb3I6IzAwMH1he3RleHQtZGVjb3JhdGlvbjpub25lO2NvbG9yOiNmZmY7Y3Vyc29yOnBvaW50ZXJ9YTphY3RpdmUsYTpob3Zlcntjb2xvcjojZDNkM2QzfS5uYXZpZ2F0aW9uLWl0ZW1ze2xpc3Qtc3R5bGU6bm9uZTtwYWRkaW5nOjA7bWFyZ2luOjB9YnV0dG9uLG1hdC1pY29ue2NvbG9yOiNmZmZ9YF1cbn0pXG5leHBvcnQgY2xhc3MgVG9wYmFyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0e1xuXG4gIEBPdXRwdXQoXCJzaWRlbmF2VG9nZ2xlXCIpIHNpZGVuYXZUb2dnbGUgPSBuZXcgRXZlbnRFbWl0dGVyPHZvaWQ+KCk7XG4gIEBJbnB1dCgnZW52aXJvbm1lbnRUaXRsZScpIGVudmlyb25tZW50VGl0bGUgOiBzdHJpbmcgPSBcIlwiO1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBoZWFkZXJTZXJ2aWNlOiBIZWFkZXJTZXJ2aWNlKSB7IH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmdldEVudmlyb25tZW50VXJsKHdpbmRvdy5sb2NhdGlvbi5ob3N0bmFtZSk7XG4gIH1cblxuICBvblRvZ2dsZVNpZGVuYXYoKXtcbiAgICB0aGlzLnNpZGVuYXZUb2dnbGUuZW1pdCgpO1xuICB9XG5cbiAgZ2V0RW52aXJvbm1lbnRVcmwodXJsOiBzdHJpbmcpe1xuICAgIGlmKHVybC5tYXRjaCgnbG9jYWxob3N0Jykpe1xuICAgICAgdGhpcy5lbnZpcm9ubWVudFRpdGxlID0gJ0xPQ0FMJztcbiAgICB9ZWxzZSBpZih1cmwuZW5kc1dpdGgoJ2QuY29ycC5vZGZsLmNvbScpKXtcbiAgICAgIHRoaXMuZW52aXJvbm1lbnRUaXRsZSA9ICdERVYnO1xuICAgIH1lbHNlIGlmKHVybC5lbmRzV2l0aCgnbC5jb3JwLm9kZmwuY29tJykpe1xuICAgICAgdGhpcy5lbnZpcm9ubWVudFRpdGxlID0gJ0xPQUQnO1xuICAgIH1lbHNlIGlmKHVybC5lbmRzV2l0aCgncS5jb3JwLm9kZmwuY29tJykpe1xuICAgICAgdGhpcy5lbnZpcm9ubWVudFRpdGxlID0gJ1FBJztcbiAgICB9ZWxzZXtcbiAgICAgIHRoaXMuZW52aXJvbm1lbnRUaXRsZSA9ICdQUk9EJztcbiAgICB9XG4gIH1cblxuXG5cbn1cbiJdfQ==