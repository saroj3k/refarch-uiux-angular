/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { JoyrideService } from 'ngx-joyride';
import { Component, EventEmitter, Output, Inject } from '@angular/core';
import { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';
import { ODJoyrideService } from '../../services/od-joyride.service';
import { HeaderService } from '../../services/header.service';
var SidenavListComponent = /** @class */ (function () {
    function SidenavListComponent(joyrideService, dialog, oDJoyrideService, headerService) {
        this.joyrideService = joyrideService;
        this.dialog = dialog;
        this.oDJoyrideService = oDJoyrideService;
        this.headerService = headerService;
        this.closeSidenav = new EventEmitter();
    }
    /**
     * @return {?}
     */
    SidenavListComponent.prototype.onClose = /**
     * @return {?}
     */
    function () {
        this.closeSidenav.emit();
    };
    /**
     * @return {?}
     */
    SidenavListComponent.prototype.startJoyride = /**
     * @return {?}
     */
    function () {
        this.onClose();
        this.joyrideService.startTour({
            steps: this.oDJoyrideService.steps,
            stepDefaultPosition: 'bottom'
        } // Your steps order
        );
    };
    /**
     * @return {?}
     */
    SidenavListComponent.prototype.openServiceTicketDialog = /**
     * @return {?}
     */
    function () {
        this.dialog.open(ServiceTicketDialog, {
            width: '500px'
        });
    };
    SidenavListComponent.decorators = [
        { type: Component, args: [{
                    selector: 'od-internal-header-sidenav-list',
                    template: "<mat-nav-list>\n  <a mat-list-item (click)=\"onClose()\">\n    <mat-icon>\n      arrow_forward_ios\n    </mat-icon>\n    <span class=\"nav-caption\">Close</span>\n  </a>\n\n  <mat-accordion>\n    <mat-expansion-panel fxHide.gt-sm *ngIf=\"headerService.pageList.length > 0\">\n      <mat-expansion-panel-header>\n        Links\n      </mat-expansion-panel-header>\n      <div *ngFor=\"let page of headerService.pageList\">\n          <a routerLink={{page.routerLink}} mat-list-item (click)=\"onClose()\">\n              <span class=\"nav-caption \">\n              {{page.title}}\n              </span>\n          </a>\n      </div>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel *ngIf=\"headerService.applicationNavList.length > 0\">\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          {{headerService.applicationGroupTitle}}\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <div *ngFor=\"let app of headerService.applicationNavList\">\n\n        <a href=\"{{app.url}}\" mat-list-item (click)=\"onClose()\">\n\n          <span class=\"nav-caption \">\n            <span class=\"fa-stack\">\n              <div *ngFor=\"let icon of app.icons\">\n                <i class=\"fa {{icon}}\"></i>\n              </div>\n            </span>\n            {{app.title}}</span>\n        </a>\n      </div>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          Help\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <a mat-list-item (click)=\"openServiceTicketDialog()\">\n        <mat-icon>local_hospital</mat-icon>\n        Service Desk Ticket\n      </a>\n\n      <a mat-list-item (click)=\"startJoyride()\">\n        <mat-icon>child_care</mat-icon>\n        Tutorial\n      </a>\n    </mat-expansion-panel>\n  </mat-accordion>\n</mat-nav-list>",
                    styles: ["a{text-decoration:none;color:#fff}a:active,a:hover{color:#d3d3d3}.nav-caption{display:inline-block;padding-left:6px}.mat-nav-list .mat-list-item:hover,mat-expansion-panel:hover{color:#fff}"]
                },] },
    ];
    /** @nocollapse */
    SidenavListComponent.ctorParameters = function () { return [
        { type: JoyrideService },
        { type: MatDialog },
        { type: ODJoyrideService },
        { type: HeaderService }
    ]; };
    SidenavListComponent.propDecorators = {
        closeSidenav: [{ type: Output, args: ["closeSidenav",] }]
    };
    return SidenavListComponent;
}());
export { SidenavListComponent };
function SidenavListComponent_tsickle_Closure_declarations() {
    /** @type {?} */
    SidenavListComponent.prototype.closeSidenav;
    /** @type {?} */
    SidenavListComponent.prototype.joyrideService;
    /** @type {?} */
    SidenavListComponent.prototype.dialog;
    /** @type {?} */
    SidenavListComponent.prototype.oDJoyrideService;
    /** @type {?} */
    SidenavListComponent.prototype.headerService;
}
var ServiceTicketDialog = /** @class */ (function () {
    function ServiceTicketDialog(dialogRef, data) {
        this.dialogRef = dialogRef;
        this.data = data;
    }
    /**
     * @return {?}
     */
    ServiceTicketDialog.prototype.onNoClick = /**
     * @return {?}
     */
    function () {
        this.dialogRef.close();
    };
    /**
     * @param {?} form
     * @return {?}
     */
    ServiceTicketDialog.prototype.onSubmit = /**
     * @param {?} form
     * @return {?}
     */
    function (form) {
        console.log(form);
    };
    ServiceTicketDialog.decorators = [
        { type: Component, args: [{
                    selector: 'service-ticket-dialog',
                    template: "<div class=\"container\" fxLayout=\"column\"  fxLayoutWrap fxLayoutGap=\"10px\" fxLayoutAlign=\"center stretch\">\n    <div fxLayoutAlign=\"center center\">\n        <h2>Service Desk Ticket</h2>\n    </div>\n    <div>\n        <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\">\n            <div fxLayoutAlign=\"center stretch\">\n            <mat-form-field fxFlex=\"100%\">\n                <textarea name=\"serviceArea\" ngModel matInput placeholder=\"Please enter your questions or comments\" required></textarea>\n            </mat-form-field>\n            </div>\n            <div fxLayoutAlign=\"center center\">\n                <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"f.invalid\">Submit</button>\n            </div>\n        </form>\n    </div>\n</div>",
                },] },
    ];
    /** @nocollapse */
    ServiceTicketDialog.ctorParameters = function () { return [
        { type: MatDialogRef },
        { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] }] }
    ]; };
    return ServiceTicketDialog;
}());
export { ServiceTicketDialog };
function ServiceTicketDialog_tsickle_Closure_declarations() {
    /** @type {?} */
    ServiceTicketDialog.prototype.dialogRef;
    /** @type {?} */
    ServiceTicketDialog.prototype.data;
}

//# sourceMappingURL=data:application/json;base64,