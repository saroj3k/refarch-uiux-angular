(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('@angular/material'), require('@angular/router'), require('ngx-joyride'), require('@angular/flex-layout'), require('@angular/forms')) :
    typeof define === 'function' && define.amd ? define('od-internal-header', ['exports', '@angular/core', '@angular/common', '@angular/material', '@angular/router', 'ngx-joyride', '@angular/flex-layout', '@angular/forms'], factory) :
    (factory((global['od-internal-header'] = {}),global.ng.core,global.ng.common,global.ng.material,global.ng.router,null,global.ng['flex-layout'],global.ng.forms));
}(this, (function (exports,core,common,material,router,ngxJoyride,flexLayout,forms) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var MaterialModule = (function () {
        function MaterialModule() {
        }
        MaterialModule.decorators = [
            { type: core.NgModule, args: [{
                        imports: [
                            common.CommonModule,
                            material.MatToolbarModule,
                            material.MatButtonModule,
                            material.MatSidenavModule,
                            material.MatIconModule,
                            material.MatListModule,
                            material.MatMenuModule,
                            material.MatTooltipModule,
                            material.MatExpansionModule,
                            material.MatDialogModule,
                            material.MatFormFieldModule,
                            material.MatInputModule
                        ],
                        exports: [
                            material.MatToolbarModule,
                            material.MatSidenavModule,
                            material.MatButtonModule,
                            material.MatIconModule,
                            material.MatListModule,
                            material.MatMenuModule,
                            material.MatTooltipModule,
                            material.MatExpansionModule,
                            material.MatDialogModule,
                            material.MatFormFieldModule,
                            material.MatInputModule
                        ],
                        declarations: []
                    },] },
        ];
        return MaterialModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var /** @type {?} */ routes = [];
    var AppRoutingModule = (function () {
        function AppRoutingModule() {
        }
        AppRoutingModule.decorators = [
            { type: core.NgModule, args: [{
                        imports: [
                            router.RouterModule.forRoot(routes)
                        ],
                        exports: [router.RouterModule],
                        declarations: []
                    },] },
        ];
        return AppRoutingModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var ODJoyrideService = (function () {
        function ODJoyrideService() {
            this.steps = [];
        }
        ODJoyrideService.decorators = [
            { type: core.Injectable },
        ];
        /** @nocollapse */
        ODJoyrideService.ctorParameters = function () { return []; };
        return ODJoyrideService;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var HeaderService = (function () {
        function HeaderService() {
            this.applicationNavList = [];
            this.pageList = [];
        }
        HeaderService.decorators = [
            { type: core.Injectable },
        ];
        /** @nocollapse */
        HeaderService.ctorParameters = function () { return []; };
        return HeaderService;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var SidenavListComponent = (function () {
        function SidenavListComponent(joyrideService, dialog, oDJoyrideService, headerService) {
            this.joyrideService = joyrideService;
            this.dialog = dialog;
            this.oDJoyrideService = oDJoyrideService;
            this.headerService = headerService;
            this.closeSidenav = new core.EventEmitter();
        }
        /**
         * @return {?}
         */
        SidenavListComponent.prototype.onClose = /**
         * @return {?}
         */
            function () {
                this.closeSidenav.emit();
            };
        /**
         * @return {?}
         */
        SidenavListComponent.prototype.startJoyride = /**
         * @return {?}
         */
            function () {
                this.onClose();
                this.joyrideService.startTour({
                    steps: this.oDJoyrideService.steps,
                    stepDefaultPosition: 'bottom'
                } // Your steps order
                );
            };
        /**
         * @return {?}
         */
        SidenavListComponent.prototype.openServiceTicketDialog = /**
         * @return {?}
         */
            function () {
                this.dialog.open(ServiceTicketDialog, {
                    width: '500px'
                });
            };
        SidenavListComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'od-internal-header-sidenav-list',
                        template: "<mat-nav-list>\n  <a mat-list-item (click)=\"onClose()\">\n    <mat-icon>\n      arrow_forward_ios\n    </mat-icon>\n    <span class=\"nav-caption\">Close</span>\n  </a>\n\n  <mat-accordion>\n    <mat-expansion-panel fxHide.gt-sm *ngIf=\"headerService.pageList.length > 0\">\n      <mat-expansion-panel-header>\n        Links\n      </mat-expansion-panel-header>\n      <div *ngFor=\"let page of headerService.pageList\">\n          <a routerLink={{page.routerLink}} mat-list-item (click)=\"onClose()\">\n              <span class=\"nav-caption \">\n              {{page.title}}\n              </span>\n          </a>\n      </div>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel *ngIf=\"headerService.applicationNavList.length > 0\">\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          {{headerService.applicationGroupTitle}}\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <div *ngFor=\"let app of headerService.applicationNavList\">\n\n        <a href=\"{{app.url}}\" mat-list-item (click)=\"onClose()\">\n\n          <span class=\"nav-caption \">\n            <span class=\"fa-stack\">\n              <div *ngFor=\"let icon of app.icons\">\n                <i class=\"fa {{icon}}\"></i>\n              </div>\n            </span>\n            {{app.title}}</span>\n        </a>\n      </div>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          Help\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <a mat-list-item (click)=\"openServiceTicketDialog()\">\n        <mat-icon>local_hospital</mat-icon>\n        Service Desk Ticket\n      </a>\n\n      <a mat-list-item (click)=\"startJoyride()\">\n        <mat-icon>child_care</mat-icon>\n        Tutorial\n      </a>\n    </mat-expansion-panel>\n  </mat-accordion>\n</mat-nav-list>",
                        styles: ["a{text-decoration:none;color:#fff}a:active,a:hover{color:#d3d3d3}.nav-caption{display:inline-block;padding-left:6px}.mat-nav-list .mat-list-item:hover,mat-expansion-panel:hover{color:#fff}"]
                    },] },
        ];
        /** @nocollapse */
        SidenavListComponent.ctorParameters = function () {
            return [
                { type: ngxJoyride.JoyrideService },
                { type: material.MatDialog },
                { type: ODJoyrideService },
                { type: HeaderService }
            ];
        };
        SidenavListComponent.propDecorators = {
            closeSidenav: [{ type: core.Output, args: ["closeSidenav",] }]
        };
        return SidenavListComponent;
    }());
    var ServiceTicketDialog = (function () {
        function ServiceTicketDialog(dialogRef, data) {
            this.dialogRef = dialogRef;
            this.data = data;
        }
        /**
         * @return {?}
         */
        ServiceTicketDialog.prototype.onNoClick = /**
         * @return {?}
         */
            function () {
                this.dialogRef.close();
            };
        /**
         * @param {?} form
         * @return {?}
         */
        ServiceTicketDialog.prototype.onSubmit = /**
         * @param {?} form
         * @return {?}
         */
            function (form) {
                console.log(form);
            };
        ServiceTicketDialog.decorators = [
            { type: core.Component, args: [{
                        selector: 'service-ticket-dialog',
                        template: "<div class=\"container\" fxLayout=\"column\"  fxLayoutWrap fxLayoutGap=\"10px\" fxLayoutAlign=\"center stretch\">\n    <div fxLayoutAlign=\"center center\">\n        <h2>Service Desk Ticket</h2>\n    </div>\n    <div>\n        <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\">\n            <div fxLayoutAlign=\"center stretch\">\n            <mat-form-field fxFlex=\"100%\">\n                <textarea name=\"serviceArea\" ngModel matInput placeholder=\"Please enter your questions or comments\" required></textarea>\n            </mat-form-field>\n            </div>\n            <div fxLayoutAlign=\"center center\">\n                <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"f.invalid\">Submit</button>\n            </div>\n        </form>\n    </div>\n</div>",
                    },] },
        ];
        /** @nocollapse */
        ServiceTicketDialog.ctorParameters = function () {
            return [
                { type: material.MatDialogRef },
                { type: undefined, decorators: [{ type: core.Inject, args: [material.MAT_DIALOG_DATA,] }] }
            ];
        };
        return ServiceTicketDialog;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var HeaderComponent = (function () {
        function HeaderComponent() {
        }
        HeaderComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'header',
                        template: "\n    <mat-sidenav #sidenav role=\"navigation\" position=\"end\">\n        <od-internal-header-sidenav-list (closeSidenav)=\"sidenav.close()\"></od-internal-header-sidenav-list>\n    </mat-sidenav>\n    <mat-sidenav-content role=\"main\">\n       <od-internal-header-topbar (sidenavToggle)=\"sidenav.toggle()\"></od-internal-header-topbar>\n        <router-outlet></router-outlet>\n    </mat-sidenav-content>\n\n",
                        styles: [""]
                    },] },
        ];
        /** @nocollapse */
        HeaderComponent.ctorParameters = function () { return []; };
        return HeaderComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var TopbarComponent = (function () {
        function TopbarComponent(headerService) {
            this.headerService = headerService;
            this.sidenavToggle = new core.EventEmitter();
            this.environmentTitle = "";
        }
        /**
         * @return {?}
         */
        TopbarComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
                this.getEnvironmentUrl(window.location.hostname);
            };
        /**
         * @return {?}
         */
        TopbarComponent.prototype.onToggleSidenav = /**
         * @return {?}
         */
            function () {
                this.sidenavToggle.emit();
            };
        /**
         * @param {?} url
         * @return {?}
         */
        TopbarComponent.prototype.getEnvironmentUrl = /**
         * @param {?} url
         * @return {?}
         */
            function (url) {
                if (url.match('localhost')) {
                    this.environmentTitle = 'LOCAL';
                }
                else if (url.endsWith('d.corp.odfl.com')) {
                    this.environmentTitle = 'DEV';
                }
                else if (url.endsWith('l.corp.odfl.com')) {
                    this.environmentTitle = 'LOAD';
                }
                else if (url.endsWith('q.corp.odfl.com')) {
                    this.environmentTitle = 'QA';
                }
                else {
                    this.environmentTitle = 'PROD';
                }
            };
        TopbarComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'od-internal-header-topbar',
                        template: "<mat-toolbar color=\"primary\">\n    <div class=\"header\">\n      <img src=\"./assets/images/logos/OD_Logo.png\">\n    </div>\n\n    <div fxFlex fxLayout fxFlexOffset=\"1%\" fxLayoutGap=\"1%\" fxLayoutAlign=\"flex-start center center\">\n        <div *ngFor=\"let page of headerService.pageList\" fxHide.lt-md>\n            <a routerLink={{page.routerLink}}>\n                {{page.title}}\n            </a>\n        </div>\n    </div>\n\n    <div fxLayoutAlign=\"flex-end\" fxLayoutGap=\"20px\">\n      <button mat-icon-button matTooltip=\"Version: 1.0.0\">\n       {{environmentTitle | uppercase}}\n      </button>\n  \n        <button mat-icon-button (click)=\"onToggleSidenav()\">\n          <i class=\"fa fa-bars fa-2x\"></i>\n        </button>\n    </div>\n\n  </mat-toolbar>",
                        styles: ["mat-toolbar{background-color:#000}a{text-decoration:none;color:#fff;cursor:pointer}a:active,a:hover{color:#d3d3d3}.navigation-items{list-style:none;padding:0;margin:0}button,mat-icon{color:#fff}"]
                    },] },
        ];
        /** @nocollapse */
        TopbarComponent.ctorParameters = function () {
            return [
                { type: HeaderService }
            ];
        };
        TopbarComponent.propDecorators = {
            sidenavToggle: [{ type: core.Output, args: ["sidenavToggle",] }],
            environmentTitle: [{ type: core.Input, args: ['environmentTitle',] }]
        };
        return TopbarComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var HeaderModule = (function () {
        function HeaderModule() {
        }
        HeaderModule.decorators = [
            { type: core.NgModule, args: [{
                        imports: [
                            common.CommonModule,
                            MaterialModule,
                            flexLayout.FlexLayoutModule,
                            AppRoutingModule,
                            ngxJoyride.JoyrideModule.forRoot(),
                            forms.FormsModule
                        ],
                        exports: [TopbarComponent, SidenavListComponent, HeaderComponent, ServiceTicketDialog],
                        entryComponents: [
                            ServiceTicketDialog
                        ],
                        providers: [ODJoyrideService, HeaderService],
                        declarations: [TopbarComponent, SidenavListComponent, HeaderComponent, ServiceTicketDialog]
                    },] },
        ];
        return HeaderModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var Application = (function () {
        function Application() {
        }
        return Application;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var Page = (function () {
        function Page() {
        }
        return Page;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */

    exports.HeaderModule = HeaderModule;
    exports.ODJoyrideService = ODJoyrideService;
    exports.HeaderService = HeaderService;
    exports.Application = Application;
    exports.Page = Page;
    exports.ɵb = AppRoutingModule;
    exports.ɵa = MaterialModule;
    exports.ɵf = HeaderComponent;
    exports.ɵe = ServiceTicketDialog;
    exports.ɵd = SidenavListComponent;
    exports.ɵc = TopbarComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,