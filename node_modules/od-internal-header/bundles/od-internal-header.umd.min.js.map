{"version":3,"sources":["ng://od-internal-header/src/app/material/material.module.ts","ng://od-internal-header/src/app/app-routing/app-routing.module.ts","ng://od-internal-header/src/app/services/od-joyride.service.ts","ng://od-internal-header/src/app/services/header.service.ts","ng://od-internal-header/src/app/nav/sidenav-list/sidenav-list.component.ts","ng://od-internal-header/src/app/nav/header/header.component.ts","ng://od-internal-header/src/app/nav/topbar/topbar.component.ts","ng://od-internal-header/src/app/nav/header/header.module.ts","ng://od-internal-header/src/app/models/application.model.ts","ng://od-internal-header/src/app/models/page.model.ts"],"names":["MaterialModule","NgModule","args","imports","CommonModule","MatToolbarModule","MatButtonModule","MatSidenavModule","MatIconModule","MatListModule","MatMenuModule","MatTooltipModule","MatExpansionModule","MatDialogModule","MatFormFieldModule","MatInputModule","exports","declarations","routes","RouterModule","forRoot","ODJoyrideService","Injectable","HeaderService","SidenavListComponent","joyrideService","dialog","oDJoyrideService","headerService","this","EventEmitter","prototype","onClose","closeSidenav","emit","startJoyride","startTour","steps","stepDefaultPosition","openServiceTicketDialog","open","ServiceTicketDialog","width","Component","selector","template","styles","JoyrideService","MatDialog","Output","dialogRef","data","onNoClick","close","onSubmit","form","console","log","MatDialogRef","Inject","MAT_DIALOG_DATA","HeaderComponent","TopbarComponent","ngOnInit","getEnvironmentUrl","window","location","hostname","onToggleSidenav","sidenavToggle","url","match","environmentTitle","endsWith","Input","HeaderModule","FlexLayoutModule","AppRoutingModule","JoyrideModule","FormsModule","entryComponents","providers","Application","Page"],"mappings":"0nBAAA,IAAAA,EAAA,oDAiBCC,EAAAA,SAAQC,KAAA,CAAC,CACRC,QAAS,CACPC,EAAAA,aACAC,EAAAA,iBACAC,EAAAA,gBACAC,EAAAA,iBACAC,EAAAA,cACAC,EAAAA,cACAC,EAAAA,cACAC,EAAAA,iBACAC,EAAAA,mBACAC,EAAAA,gBACAC,EAAAA,mBACAC,EAAAA,gBAEFC,QAAQ,CACNX,EAAAA,iBACAE,EAAAA,iBACAD,EAAAA,gBACAE,EAAAA,cACAC,EAAAA,cACAC,EAAAA,cACAC,EAAAA,iBACAC,EAAAA,mBACAC,EAAAA,gBACAC,EAAAA,mBACAC,EAAAA,gBAGFE,aAAc,SA9ChB,GCIMC,EAAiB,yDAGtBjB,EAAAA,SAAQC,KAAA,CAAC,CACRC,QAAS,CACPgB,EAAAA,aAAaC,QAAQF,IAEvBF,QAAQ,CAACG,EAAAA,cACTF,aAAc,YCZhBI,EAAA,WAMI,SAAAA,eADkB,8BAHrBC,EAAAA,qDAFD,GCAAC,EAAA,WAWI,SAAAA,4BAJoC,iBACjB,8BAJtBD,EAAAA,qDAJD,GCAAE,EAAA,WA+EE,SAAAA,EAA6BC,EACpBC,EACCC,EACDC,GAHoBC,KAAAJ,eAAAA,EACpBI,KAAAH,OAAAA,EACCG,KAAAF,iBAAAA,EACDE,KAAAD,cAAAA,oBAL8B,IAAIE,EAAAA,oBAS3CN,EAAAO,UAAAC,QAAA,WACEH,KAAKI,aAAaC,QAGpBV,EAAAO,UAAAI,aAAA,WACEN,KAAKG,UACLH,KAAKJ,eAAeW,UAClB,CACEC,MAAOR,KAAKF,iBAAiBU,MAC7BC,oBAAqB,YAM3Bd,EAAAO,UAAAQ,wBAAA,WACIV,KAAKH,OAAOc,KAAKC,EAAqB,CACpCC,MAAO,+BA7FdC,EAAAA,UAASzC,KAAA,CAAC,CACT0C,SAAU,kCACVC,SAAU,o0DA6DVC,OAAQ,CAAC,6OAzEFC,EAAAA,sBAIAC,EAAAA,iBAEA3B,SACAE,2CAsEN0B,EAAAA,OAAM/C,KAAA,CAAC,qBA7EV,gBAmIE,SAAAuC,EACSS,EACyBC,GADzBtB,KAAAqB,UAAAA,EACyBrB,KAAAsB,KAAAA,SAElCV,EAAAV,UAAAqB,UAAA,WACEvB,KAAKqB,UAAUG,SAGjBZ,EAAAV,UAAAuB,SAAA,SAASC,GACPC,QAAQC,IAAIF,wBA/BfZ,EAAAA,UAASzC,KAAA,CAAC,CACT0C,SAAU,wBACVC,SAAU,yyBA3GQa,EAAAA,gDAiIfC,EAAAA,OAAMzD,KAAA,CAAC0D,EAAAA,2BCrIZC,EAAA,WAkBE,SAAAA,gCAfDlB,EAAAA,UAASzC,KAAA,CAAC,CACT0C,SAAU,SACVC,SAAU,qZAUVC,OAAQ,CAAC,gDAfX,GCEAgB,EAAA,WAoCE,SAAAA,EAAmBlC,GAAAC,KAAAD,cAAAA,qBAHsB,IAAIE,EAAAA,mCACU,UAIvDgC,EAAA/B,UAAAgC,SAAA,WACElC,KAAKmC,kBAAkBC,OAAOC,SAASC,WAGzCL,EAAA/B,UAAAqC,gBAAA,WACEvC,KAAKwC,cAAcnC,QAGrB4B,EAAA/B,UAAAiC,kBAAA,SAAkBM,GACbA,EAAIC,MAAM,aACX1C,KAAK2C,iBAAmB,QACjBF,EAAIG,SAAS,mBACpB5C,KAAK2C,iBAAmB,MACjBF,EAAIG,SAAS,mBACpB5C,KAAK2C,iBAAmB,OACjBF,EAAIG,SAAS,mBACpB5C,KAAK2C,iBAAmB,KAExB3C,KAAK2C,iBAAmB,4BArD7B7B,EAAAA,UAASzC,KAAA,CAAC,CACT0C,SAAU,4BACVC,SAAU,0vBAwBVC,OAAQ,CAAC,mPA5BFvB,4CAgCN0B,EAAAA,OAAM/C,KAAA,CAAC,2CACPwE,EAAAA,MAAKxE,KAAA,CAAC,yBAlCT,GCFAyE,EAAA,oDAaC1E,EAAAA,SAAQC,KAAA,CAAC,CACRC,QAAS,CACPC,EAAAA,aACAJ,EACA4E,EAAAA,iBACAC,EACAC,EAAAA,cAAc1D,UACd2D,EAAAA,aAEF/D,QAAS,CAAC8C,EAAiBtC,EAAsBqC,EAAiBpB,GAClEuC,gBAAgB,CACdvC,GAEFwC,UAAW,CAAC5D,EAAkBE,GAC9BN,aAAc,CAAC6C,EAAiBtC,EAAsBqC,EAAiBpB,SA3BzE,GCAAyC,eCAAC","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n  MatToolbarModule,\n  MatSidenavModule,\n  MatButtonModule,\n  MatIconModule,\n  MatListModule,\n  MatMenuModule,\n  MatTooltipModule,\n  MatExpansionModule,\n  MatDialogModule,\n  MatFormFieldModule,\n  MatInputModule\n} from '@angular/material';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatMenuModule,\n    MatTooltipModule,\n    MatExpansionModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule\n  ],\n  exports:[\n    MatToolbarModule,\n    MatSidenavModule,\n    MatButtonModule,\n    MatIconModule,\n    MatListModule,\n    MatMenuModule,\n    MatTooltipModule,\n    MatExpansionModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule\n  ],\n\n  declarations: []\n})\nexport class MaterialModule { }\n","import { NgModule, Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule, Router} from '@angular/router';\n\nconst routes: Routes = [\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports:[RouterModule],\n  declarations: []\n})\nexport class AppRoutingModule { \n}\n","import { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class ODJoyrideService{\n\n    steps: string[] = [];\n    constructor(){}\n\n}","import { Injectable } from \"@angular/core\";\nimport { Application } from \"../models/application.model\";\nimport { Page } from \"../models/page.model\";\n\n@Injectable()\nexport class HeaderService{\n\n    applicationNavList: Application[] = [];\n    pageList: Page[] = [];\n    applicationGroupTitle: string;\n\n    constructor(){\n    }\n\n}","import { JoyrideService } from 'ngx-joyride';\nimport { Application } from './../../models/application.model';\nimport { Component, EventEmitter, Output, Input, Inject } from '@angular/core';\nimport { Page } from '../../models/page.model';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { NgForm } from '@angular/forms';\nimport { ODJoyrideService } from '../../services/od-joyride.service';\nimport { HeaderService } from '../../services/header.service';\n\n\n@Component({\n  selector: 'od-internal-header-sidenav-list',\n  template: `<mat-nav-list>\n  <a mat-list-item (click)=\"onClose()\">\n    <mat-icon>\n      arrow_forward_ios\n    </mat-icon>\n    <span class=\"nav-caption\">Close</span>\n  </a>\n\n  <mat-accordion>\n    <mat-expansion-panel fxHide.gt-sm *ngIf=\"headerService.pageList.length > 0\">\n      <mat-expansion-panel-header>\n        Links\n      </mat-expansion-panel-header>\n      <div *ngFor=\"let page of headerService.pageList\">\n          <a routerLink={{page.routerLink}} mat-list-item (click)=\"onClose()\">\n              <span class=\"nav-caption \">\n              {{page.title}}\n              </span>\n          </a>\n      </div>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel *ngIf=\"headerService.applicationNavList.length > 0\">\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          {{headerService.applicationGroupTitle}}\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <div *ngFor=\"let app of headerService.applicationNavList\">\n\n        <a href=\"{{app.url}}\" mat-list-item (click)=\"onClose()\">\n\n          <span class=\"nav-caption \">\n            <span class=\"fa-stack\">\n              <div *ngFor=\"let icon of app.icons\">\n                <i class=\"fa {{icon}}\"></i>\n              </div>\n            </span>\n            {{app.title}}</span>\n        </a>\n      </div>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          Help\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <a mat-list-item (click)=\"openServiceTicketDialog()\">\n        <mat-icon>local_hospital</mat-icon>\n        Service Desk Ticket\n      </a>\n\n      <a mat-list-item (click)=\"startJoyride()\">\n        <mat-icon>child_care</mat-icon>\n        Tutorial\n      </a>\n    </mat-expansion-panel>\n  </mat-accordion>\n</mat-nav-list>`,\n  styles: [`a{text-decoration:none;color:#fff}a:active,a:hover{color:#d3d3d3}.nav-caption{display:inline-block;padding-left:6px}.mat-nav-list .mat-list-item:hover,mat-expansion-panel:hover{color:#fff}`]\n})\nexport class SidenavListComponent {\n\n  @Output(\"closeSidenav\") closeSidenav = new EventEmitter<void>();\n\n  constructor(private readonly joyrideService: JoyrideService, \n    public dialog: MatDialog, \n    private oDJoyrideService: ODJoyrideService,\n    public headerService: HeaderService) {\n    \n  }\n\n  onClose(){\n    this.closeSidenav.emit();\n  }\n\n  startJoyride(){\n    this.onClose();\n    this.joyrideService.startTour(\n      { \n        steps: this.oDJoyrideService.steps,\n        stepDefaultPosition: 'bottom'\n      } // Your steps order\n    );\n  }\n \n\n  openServiceTicketDialog(): void{\n      this.dialog.open(ServiceTicketDialog, {\n        width: '500px'\n      });\n  }\n\n}\n\n@Component({\n  selector: 'service-ticket-dialog',\n  template: `<div class=\"container\" fxLayout=\"column\"  fxLayoutWrap fxLayoutGap=\"10px\" fxLayoutAlign=\"center stretch\">\n    <div fxLayoutAlign=\"center center\">\n        <h2>Service Desk Ticket</h2>\n    </div>\n    <div>\n        <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\">\n            <div fxLayoutAlign=\"center stretch\">\n            <mat-form-field fxFlex=\"100%\">\n                <textarea name=\"serviceArea\" ngModel matInput placeholder=\"Please enter your questions or comments\" required></textarea>\n            </mat-form-field>\n            </div>\n            <div fxLayoutAlign=\"center center\">\n                <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"f.invalid\">Submit</button>\n            </div>\n        </form>\n    </div>\n</div>`,\n})\nexport class ServiceTicketDialog {\n\n  constructor(\n    public dialogRef: MatDialogRef<ServiceTicketDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onSubmit(form: NgForm){\n    console.log(form);\n  }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { HeaderService } from '../../services/header.service';\n\n@Component({\n  selector: 'header',\n  template: `\n    <mat-sidenav #sidenav role=\"navigation\" position=\"end\">\n        <od-internal-header-sidenav-list (closeSidenav)=\"sidenav.close()\"></od-internal-header-sidenav-list>\n    </mat-sidenav>\n    <mat-sidenav-content role=\"main\">\n       <od-internal-header-topbar (sidenavToggle)=\"sidenav.toggle()\"></od-internal-header-topbar>\n        <router-outlet></router-outlet>\n    </mat-sidenav-content>\n\n`,\n  styles: [``]\n})\nexport class HeaderComponent{\n  constructor(){}\n}\n","import { Page } from './../../models/page.model';\nimport { Application } from './../../models/application.model';\nimport { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { HeaderService } from '../../services/header.service';\n\n@Component({\n  selector: 'od-internal-header-topbar',\n  template: `<mat-toolbar color=\"primary\">\n    <div class=\"header\">\n      <img src=\"./assets/images/logos/OD_Logo.png\">\n    </div>\n\n    <div fxFlex fxLayout fxFlexOffset=\"1%\" fxLayoutGap=\"1%\" fxLayoutAlign=\"flex-start center center\">\n        <div *ngFor=\"let page of headerService.pageList\" fxHide.lt-md>\n            <a routerLink={{page.routerLink}}>\n                {{page.title}}\n            </a>\n        </div>\n    </div>\n\n    <div fxLayoutAlign=\"flex-end\" fxLayoutGap=\"20px\">\n      <button mat-icon-button matTooltip=\"Version: 1.0.0\">\n       {{environmentTitle | uppercase}}\n      </button>\n  \n        <button mat-icon-button (click)=\"onToggleSidenav()\">\n          <i class=\"fa fa-bars fa-2x\"></i>\n        </button>\n    </div>\n\n  </mat-toolbar>`,\n  styles: [`mat-toolbar{background-color:#000}a{text-decoration:none;color:#fff;cursor:pointer}a:active,a:hover{color:#d3d3d3}.navigation-items{list-style:none;padding:0;margin:0}button,mat-icon{color:#fff}`]\n})\nexport class TopbarComponent implements OnInit{\n\n  @Output(\"sidenavToggle\") sidenavToggle = new EventEmitter<void>();\n  @Input('environmentTitle') environmentTitle : string = \"\";\n\n  constructor(public headerService: HeaderService) { }\n\n  ngOnInit() {\n    this.getEnvironmentUrl(window.location.hostname);\n  }\n\n  onToggleSidenav(){\n    this.sidenavToggle.emit();\n  }\n\n  getEnvironmentUrl(url: string){\n    if(url.match('localhost')){\n      this.environmentTitle = 'LOCAL';\n    }else if(url.endsWith('d.corp.odfl.com')){\n      this.environmentTitle = 'DEV';\n    }else if(url.endsWith('l.corp.odfl.com')){\n      this.environmentTitle = 'LOAD';\n    }else if(url.endsWith('q.corp.odfl.com')){\n      this.environmentTitle = 'QA';\n    }else{\n      this.environmentTitle = 'PROD';\n    }\n  }\n\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from '../../material/material.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { AppRoutingModule } from '../../app-routing/app-routing.module';\nimport { SidenavListComponent, ServiceTicketDialog } from '../sidenav-list/sidenav-list.component';\nimport { HeaderComponent } from './header.component';\nimport { JoyrideModule } from 'ngx-joyride';\nimport { TopbarComponent } from '../topbar/topbar.component';\nimport { FormsModule } from '@angular/forms';\nimport { ODJoyrideService } from '../../services/od-joyride.service';\nimport { HeaderService } from '../../services/header.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialModule,\n    FlexLayoutModule,\n    AppRoutingModule,\n    JoyrideModule.forRoot(),\n    FormsModule\n  ],\n  exports: [TopbarComponent, SidenavListComponent, HeaderComponent, ServiceTicketDialog],\n  entryComponents:[\n    ServiceTicketDialog\n  ],\n  providers: [ODJoyrideService, HeaderService],\n  declarations: [TopbarComponent, SidenavListComponent, HeaderComponent, ServiceTicketDialog]\n})\nexport class HeaderModule { }\n","export class Application{\n    title: string;\n    url: string;\n    icons: string[];\n}","export class Page{\n    title: string;\n    routerLink: string;\n}"]}